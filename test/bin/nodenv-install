#!/usr/bin/env bash
#
# Summary: Fake install program
#
# Usage: nodenv install [--fail|--no-hooks] version
#

set -e
[ -n "$NODENV_DEBUG" ] && set -x

# Define `before_install` and `after_install` functions that allow
# plugin hooks to register a string of code for execution before or
# after the installation process.
declare -a after_hooks

after_install() {
  local hook="$1"
  after_hooks["${#after_hooks[@]}"]="$hook"
}

if [ "$1" == --no-hooks ]; then
  skip_hooks=1
  shift
else
  while IFS='' read -r hook; do
    echo Sourcing "$hook"
    # shellcheck source=../../etc/nodenv.d/install/default-packages.bash
    source "$hook"
  done < <(nodenv-hooks install)
fi

case "$1" in
*[0-9].*)
  STATUS=0
  VERSION_NAME=$1
  d="$NODENV_ROOT/versions/$VERSION_NAME"
  mkdir -p "$d/bin"
  echo "echo \"npm invoked with: \$@\"" >"$d/bin/npm"
  chmod a+x "$d/bin/npm"
  echo "Installed fake node into $d"
  ;;
--fail)
  STATUS=1
  VERSION_NAME=$2
  echo "Failed installation of $2"
  ;;
*)
  nodenv-help --usage install >&2
  exit 1
  ;;
esac

if [ -z "$skip_hooks" ]; then
  echo Executing after_install hooks.
  for hook in "${after_hooks[@]}"; do eval "$hook"; done
fi

exit $STATUS
